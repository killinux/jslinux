        Warning Options.    (line  875)
* Wcast-qual:                            Warning Options.    (line  870)
* Wchar-subscripts:                      Warning Options.    (line  189)
* Wclobbered:                            Warning Options.    (line  893)
* Wcomment <1>:                          Preprocessor Options.
                                                             (line   88)
* Wcomment:                              Warning Options.    (line  194)
* Wcomments:                             Preprocessor Options.
                                                             (line   88)
* Wconversion:                           Warning Options.    (line  897)
* Wcoverage-mismatch:                    Language Independent Options.
                                                             (line   42)
* Wctor-dtor-privacy:                    C++ Dialect Options.
                                                             (line  346)
* Wdeclaration-after-statement:          Warning Options.    (line  813)
* Wdeprecated:                           C++ Dialect Options.
                                                             (line  403)
* Wdeprecated-declarations:              Warning Options.    (line 1096)
* Wdisabled-optimization:                Warning Options.    (line 1227)
* Wdiv-by-zero:                          Warning Options.    (line  697)
* weak_reference_mismatches:             Darwin Options.     (line  199)
* Weffc++:                               C++ Dialect Options.
                                                             (line  373)
* Wempty-body:                           Warning Options.    (line  916)
* Wendif-labels <1>:                     Preprocessor Options.
                                                             (line  138)
* Wendif-labels:                         Warning Options.    (line  823)
* Werror <1>:                            Preprocessor Options.
                                                             (line  151)
* Werror:                                Warning Options.    (line   21)
* Werror=:                               Warning Options.    (line   24)
* Wextra:                                Warning Options.    (line  145)
* Wfatal-errors:                         Warning Options.    (line   38)
* Wfloat-equal:                          Warning Options.    (line  713)
* Wformat <1>:                           Function Attributes.
                                                             (line  369)
* Wformat:                               Warning Options.    (line  199)
* Wformat-extra-args:                    Warning Options.    (line  238)
* Wformat-nonliteral <1>:                Function Attributes.
                                                             (line  422)
* Wformat-nonliteral:                    Warning Options.    (line  256)
* Wformat-security:                      Warning Options.    (line  261)
* Wformat-y2k:                           Warning Options.    (line  234)
* Wformat-zero-length:                   Warning Options.    (line  252)
* Wformat=2:                             Warning Options.    (line  272)
* whatsloaded:                           Darwin Options.     (line  199)
* whyload:                               Darwin Options.     (line  199)
* Wignored-qualifiers:                   Warning Options.    (line  312)
* Wimplicit:                             Warning Options.    (line  308)
* Wimplicit-function-declaration:        Warning Options.    (line  302)
* Wimplicit-int:                         Warning Options.    (line  298)
* Wimport <1>:                           Preprocessor Options.
                                                             (line  111)
* Wimport:                               Warning Options.    (line  186)
* Winit-self:                            Warning Options.    (line  284)
* Winline <1>:                           Inline.             (line   63)
* Winline:                               Warning Options.    (line 1167)
* Wint-to-pointer-cast:                  Warning Options.    (line 1194)
* Winvalid-offsetof:                     Warning Options.    (line 1180)
* Winvalid-pch:                          Warning Options.    (line 1202)
* Wl:                                    Link Options.       (line  175)
* Wlarger-than-LEN:                      Warning Options.    (line  832)
* Wlogical-op:                           Warning Options.    (line  948)
* Wlong-long:                            Warning Options.    (line 1206)
* Wmain:                                 Warning Options.    (line  323)
* Wmissing-braces:                       Warning Options.    (line  329)
* Wmissing-declarations:                 Warning Options.    (line  994)
* Wmissing-field-initializers:           Warning Options.    (line 1002)
* Wmissing-format-attribute:             Warning Options.    (line 1028)
* Wmissing-include-dirs:                 Warning Options.    (line  339)
* Wmissing-noreturn:                     Warning Options.    (line 1020)
* Wmissing-parameter-type:               Warning Options.    (line  980)
* Wmissing-prototypes:                   Warning Options.    (line  988)
* Wmultichar:                            Warning Options.    (line 1047)
* Wnested-externs:                       Warning Options.    (line 1142)
* Wno-abi:                               C++ Dialect Options.
                                                             (line  268)
* Wno-address:                           Warning Options.    (line  935)
* Wno-aggregate-return:                  Warning Options.    (line  953)
* Wno-all:                               Warning Options.    (line   99)
* Wno-array-bounds:                      Warning Options.    (line  692)
* Wno-assign-intercept:                  Objective-C and Objective-C++ Dialect Options.
                                                             (line  198)
* Wno-attributes:                        Warning Options.    (line  958)
* Wno-bad-function-cast:                 Warning Options.    (line  855)
* Wno-cast-align:                        Warning Options.    (line  875)
* Wno-cast-qual:                         Warning Options.    (line  870)
* Wno-char-subscripts:                   Warning Options.    (line  189)
* Wno-clobbered:                         Warning Options.    (line  893)
* Wno-comment:                           Warning Options.    (line  194)
* Wno-conversion:                        Warning Options.    (line  897)
* Wno-ctor-dtor-privacy:                 C++ Dialect Options.
                                                             (line  346)
* Wno-declaration-after-statement:       Warning Options.    (line  813)
* Wno-deprecated:                        C++ Dialect Options.
                                                             (line  403)
* Wno-deprecated-declarations:           Warning Options.    (line 1096)
* Wno-disabled-optimization:             Warning Options.    (line 1227)
* Wno-div-by-zero:                       Warning Options.    (line  697)
* Wno-effc++:                            C++ Dialect Options.
                                                             (line  373)
* Wno-empty-body:                        Warning Options.    (line  916)
* Wno-endif-labels:                      Warning Options.    (line  823)
* Wno-error:                             Warning Options.    (line   21)
* Wno-error=:                            Warning Options.    (line   24)
* Wno-extra:                             Warning Options.    (line  145)
* Wno-fatal-errors:                      Warning Options.    (line   38)
* Wno-float-equal:                       Warning Options.    (line  713)
* Wno-format:                            Warning Options.    (line  199)
* Wno-format-extra-args:                 Warning Options.    (line  238)
* Wno-format-nonliteral:                 Warning Options.    (line  256)
* Wno-format-security:                   Warning Options.    (line  261)
* Wno-format-y2k:                        Warning Options.    (line  234)
* Wno-format-zero-length:                Warning Options.    (line  252)
* Wno-format=2:                          Warning Options.    (line  272)
* Wno-ignored-qualifiers:                Warning Options.    (line  312)
* Wno-implicit:                          Warning Options.    (line  308)
* Wno-implicit-function-declaration:     Warning Options.    (line  302)
* Wno-implicit-int:                      Warning Options.    (line  298)
* Wno-import:                            Warning Options.    (line  186)
* Wno-init-self:                         Warning Options.    (line  284)
* Wno-inline:                            Warning Options.    (line 1167)
* Wno-int-to-pointer-cast:               Warning Options.    (line 1194)
* Wno-invalid-offsetof:                  Warning Options.    (line 1180)
* Wno-invalid-pch:                       Warning Options.    (line 1202)
* Wno-logical-op:                        Warning Options.    (line  948)
* Wno-long-long:                         Warning Options.    (line 1206)
* Wno-main:                              Warning Options.    (line  323)
* Wno-missing-braces:                    Warning Options.    (line  329)
* Wno-missing-declarations:              Warning Options.    (line  994)
* Wno-missing-field-initializers:        Warning Options.    (line 1002)
* Wno-missing-format-attribute:          Warning Options.    (line 1028)
* Wno-missing-include-dirs:              Warning Options.    (line  339)
* Wno-missing-noreturn:                  Warning Options.    (line 1020)
* Wno-missing-parameter-type:            Warning Options.    (line  980)
* Wno-missing-prototypes:                Warning Options.    (line  988)
* Wno-multichar:                         Warning Options.    (line 1047)
* Wno-nested-externs:                    Warning Options.    (line 1142)
* Wno-non-template-friend:               C++ Dialect Options.
                                                             (line  414)
* Wno-non-virtual-dtor:                  C++ Dialect Options.
                                                             (line  351)
* Wno-nonnull:                           Warning Options.    (line  277)
* Wno-old-style-cast:                    C++ Dialect Options.
                                                             (line  430)
* Wno-old-style-declaration:             Warning Options.    (line  970)
* Wno-old-style-definition:              Warning Options.    (line  976)
* Wno-overflow:                          Warning Options.    (line 1102)
* Wno-overlength-strings:                Warning Options.    (line 1247)
* Wno-overloaded-virtual:                C++ Dialect Options.
                                                             (line  436)
* Wno-override-init:                     Warning Options.    (line 1105)
* Wno-packed:                            Warning Options.    (line 1113)
* Wno-padded:                            Warning Options.    (line 1130)
* Wno-parentheses:                       Warning Options.    (line  342)
* Wno-pmf-conversions <1>:               Bound member functions.
                                                             (line   35)
* Wno-pmf-conversions:                   C++ Dialect Options.
                                                             (line  455)
* Wno-pointer-arith:                     Warning Options.    (line  841)
* Wno-pointer-sign:                      Warning Options.    (line 1236)
* Wno-pointer-to-int-cast:               Warning Options.    (line 1198)
* Wno-pragmas:                           Warning Options.    (line  595)
* Wno-protocol:                          Objective-C and Objective-C++ Dialect Options.
                                                             (line  202)
* Wno-redundant-decls:                   Warning Options.    (line 1137)
* Wno-reorder:                           C++ Dialect Options.
                                                             (line  357)
* Wno-return-type:                       Warning Options.    (line  432)
* Wno-selector:                          Objective-C and Objective-C++ Dialect Options.
                                                             (line  212)
* Wno-sequence-point:                    Warning Options.    (line  386)
* Wno-shadow:                            Warning Options.    (line  827)
* Wno-sign-compare:                      Warning Options.    (line  922)
* Wno-sign-conversion:                   Warning Options.    (line  929)
* Wno-sign-promo:                        C++ Dialect Options.
                                                             (line  459)
* Wno-stack-protector:                   Warning Options.    (line 1242)
* Wno-strict-aliasing:                   Warning Options.    (line  600)
* Wno-strict-aliasing=n:                 Warning Options.    (line  608)
* Wno-strict-null-sentinel:              C++ Dialect Options.
                                                             (line  407)
* Wno-strict-overflow:                   Warning Options.    (line  641)
* Wno-strict-prototypes:                 Warning Options.    (line  964)
* Wno-strict-selector-match:             Objective-C and Objective-C++ Dialect Options.
                                                             (line  224)
* Wno-switch:                            Warning Options.    (line  447)
* Wno-switch-default:                    Warning Options.    (line  455)
* Wno-switch-enum:                       Warning Options.    (line  458)
* Wno-system-headers:                    Warning Options.    (line  702)
* Wno-traditional:                       Warning Options.    (line  728)
* Wno-traditional-conversion:            Warning Options.    (line  805)
* Wno-trigraphs:                         Warning Options.    (line  464)
* Wno-type-limits:                       Warning Options.    (line  848)
* Wno-undeclared-selector:               Objective-C and Objective-C++ Dialect Options.
                                                             (line  232)
* Wno-undef:                             Warning Options.    (line  820)
* Wno-uninitialized:                     Warning Options.    (line  513)
* Wno-unknown-pragmas:                   Warning Options.    (line  588)
* Wno-unreachable-code:                  Warning Options.    (line 1145)
* Wno-unsafe-loop-optimizations:         Warning Options.    (line  835)
* Wno-unused:                            Warning Options.    (line  506)
* Wno-unused-function:                   Warning Options.    (line  469)
* Wno-unused-label:                      Warning Options.    (line  474)
* Wno-unused-parameter:                  Warning Options.    (line  481)
* Wno-unused-value:                      Warning Options.    (line  496)
* Wno-unused-variable:                   Warning Options.    (line  488)
* Wno-variadic-macros:                   Warning Options.    (line 1212)
* Wno-vla:                               Warning Options.    (line 1218)
* Wno-volatile-register-var:             Warning Options.    (line 1222)
* Wno-write-strings:                     Warning Options.    (line  881)
* Wnon-template-friend:                  C++ Dialect Options.
                                                             (line  414)
* Wnon-virtual-dtor:                     C++ Dialect Options.
                                                             (line  351)
* Wnonnull:                              Warning Options.    (line  277)
* Wnormalized=:                          Warning Options.    (line 1053)
* Wold-style-cast:                       C++ Dialect Options.
                                                             (line  430)
* Wold-style-declaration:                Warning Options.    (line  970)
* Wold-style-definition:                 Warning Options.    (line  976)
* Woverflow:                             Warning Options.    (line 1102)
* Woverlength-strings:                   Warning Options.    (line 1247)
* Woverloaded-virtual:                   C++ Dialect Options.
                                                             (line  436)
* Woverride-init:                        Warning Options.    (line 1105)
* Wp:                                    Preprocessor Options.
                                                             (line   13)
* Wpacked:                               Warning Options.    (line 1113)
* Wpadded:                               Warning Options.    (line 1130)
* Wparentheses:                          Warning Options.    (line  342)
* Wpmf-conversions:                      C++ Dialect Options.
                                                             (line  455)
* Wpointer-arith <1>:                    Pointer Arith.      (line   13)
* Wpointer-arith:                        Warning Options.    (line  841)
* Wpointer-sign:                         Warning Options.    (line 1236)
* Wpointer-to-int-cast:                  Warning Options.    (line 1198)
* Wpragmas:                              Warning Options.    (line  595)
* Wprotocol:                             Objective-C and Objective-C++ Dialect Options.
                                                             (line  202)
* Wredundant-decls:                      Warning Options.    (line 1137)
* Wreorder:                              C++ Dialect Options.
                                                             (line  357)
* Wreturn-type:                          Warning Options.    (line  432)
* Wselector:                             Objective-C and Objective-C++ Dialect Options.
                                                             (line  212)
* Wsequence-point:                       Warning Options.    (line  386)
* Wshadow:                               Warning Options.    (line  827)
* Wsign-compare:                         Warning Options.    (line  922)
* Wsign-conversion:                      Warning Options.    (line  929)
* Wsign-promo:                           C++ Dialect Options.
                                                             (line  459)
* Wstack-protector:                      Warning Options.    (line 1242)
* Wstrict-aliasing:                      Warning Options.    (line  600)
* Wstrict-aliasing=n:                    Warning Options.    (line  608)
* Wstrict-null-sentinel:                 C++ Dialect Options.
                                                             (line  407)
* Wstrict-overflow:                      Warning Options.    (line  641)
* Wstrict-prototypes:                    Warning Options.    (line  964)
* Wstrict-selector-match:                Objective-C and Objective-C++ Dialect Options.
                                                             (line  224)
* Wswitch:                               Warning Options.    (line  447)
* Wswitch-default:                       Warning Options.    (line  455)
* Wswitch-enum:                          Warning Options.    (line  458)
* Wsystem-headers <1>:                   Preprocessor Options.
                                                             (line  155)
* Wsystem-headers:                       Warning Options.    (line  702)
* Wtraditional <1>:                      Preprocessor Options.
                                                             (line  105)
* Wtraditional:                          Warning Options.    (line  728)
* Wtraditional-conversion <1>:           Protoize Caveats.   (line   31)
* Wtraditional-conversion:               Warning Options.    (line  805)
* Wtrigraphs <1>:                        Preprocessor Options.
                                                             (line   93)
* Wtrigraphs:                            Warning Options.    (line  464)
* Wtype-limits:                          Warning Options.    (line  848)
* Wundeclared-selector:                  Objective-C and Objective-C++ Dialect Options.
                                                             (line  232)
* Wundef <1>:                            Preprocessor Options.
                                                             (line  114)
* Wundef:                                Warning Options.    (line  820)
* Wuninitialized:                        Warning Options.    (line  513)
* Wunknown-pragmas:                      Warning Options.    (line  588)
* Wunreachable-code:                     Warning Options.    (line 1145)
* Wunsafe-loop-optimizations:            Warning Options.    (line  835)
* Wunused:                               Warning Options.    (line  506)
* Wunused-function:                      Warning Options.    (line  469)
* Wunused-label:                         Warning Options.    (line  474)
* Wunused-macros:                        Preprocessor Options.
                                                             (line  119)
* Wunused-parameter:                     Warning Options.    (line  481)
* Wunused-value:                         Warning Options.    (line  496)
* Wunused-variable:                      Warning Options.    (line  488)
* Wvariadic-macros:                      Warning Options.    (line 1212)
* Wvla:                                  Warning Options.    (line 1218)
* Wvolatile-register-var:                Warning Options.    (line 1222)
* Wwrite-strings:                        Warning Options.    (line  881)
* x <1>:                                 Preprocessor Options.
                                                             (line  312)
* x:                                     Overall Options.    (line  116)
* Xassembler:                            Assembler Options.  (line   13)
* Xbind-lazy:                            VxWorks Options.    (line   26)
* Xbind-now:                             VxWorks Options.    (line   30)
* Xlinker:                               Link Options.       (line  163)
* Ym:                                    System V Options.   (line   26)
* YP:                                    System V Options.   (line   22)


File: gcc.info,  Node: Keyword Index,  Prev: Option Index,  Up: Top

Keyword Index
*************

 [index ]
* Menu:

* ! in constraint:                       Multi-Alternative.  (line   33)
* # in constraint:                       Modifiers.          (line   57)
* #pragma:                               Pragmas.            (line    6)
* #pragma implementation:                C++ Interface.      (line   39)
* #pragma implementation, implied:       C++ Interface.      (line   46)
* #pragma interface:                     C++ Interface.      (line   20)
* #pragma, reason for not using:         Function Attributes.
                                                             (line 1117)
* $:                                     Dollar Signs.       (line    6)
* % in constraint:                       Modifiers.          (line   45)
* %include:                              Spec Files.         (line   27)
* %include_noerr:                        Spec Files.         (line   31)
* %rename:                               Spec Files.         (line   35)
* & in constraint:                       Modifiers.          (line   25)
* ':                                     Incompatibilities.  (line  116)
* (:                                     Constructing Calls. (line   53)
* * in constraint:                       Modifiers.          (line   62)
* + in constraint:                       Modifiers.          (line   12)
* -lgcc, use with -nodefaultlibs:        Link Options.       (line   79)
* -lgcc, use with -nostdlib:             Link Options.       (line   79)
* -nodefaultlibs and unresolved references: Link Options.    (line   79)
* -nostdlib and unresolved references:   Link Options.       (line   79)
* .sdata/.sdata2 references (PowerPC):   RS/6000 and PowerPC Options.
                                                             (line  629)
* //:                                    C++ Comments.       (line    6)
* 0 in constraint:                       Simple Constraints. (line  115)
* < in constraint:                       Simple Constraints. (line   46)
* = in constraint:                       Modifiers.          (line    8)
* > in constraint:                       Simple Constraints. (line   50)
* ? in constraint:                       Multi-Alternative.  (line   27)
* ?: extensions:                         Conditionals.       (line    6)
* ?: side effect:                        Conditionals.       (line   20)
* _ in variables in macros:              Typeof.             (line   42)
* __builtin___clear_cache:               Other Builtins.     (line  272)
* __builtin___fprintf_chk:               Object Size Checking.
                                                             (line    6)
* __builtin___memcpy_chk:                Object Size Checking.
                                                             (line    6)
* __builtin___memmove_chk:               Object Size Checking.
                                                             (line    6)
* __builtin___mempcpy_chk:               Object Size Checking.
                                                             (line    6)
* __builtin___memset_chk:                Object Size Checking.
                                                             (line    6)
* __builtin___printf_chk:                Object Size Checking.
                                                             (line    6)
* __builtin___snprintf_chk:              Object Size Checking.
                                                             (line    6)
* __builtin___sprintf_chk:               Object Size Checking.
                                                             (line    6)
* __builtin___stpcpy_chk:                Object Size Checking.
                                                             (line    6)
* __builtin___strcat_chk:                Object Size Checking.
                                                             (line    6)
* __builtin___strcpy_chk:                Object Size Checking.
                                                             (line    6)
* __builtin___strncat_chk:               Object Size Checking.
                                                             (line    6)
* __builtin___strncpy_chk:               Object Size Checking.
                                                             (line    6)
* __builtin___vfprintf_chk:              Object Size Checking.
                                                             (line    6)
* __builtin___vprintf_chk:               Object Size Checking.
                                                             (line    6)
* __builtin___vsnprintf_chk:             Object Size Checking.
                                                             (line    6)
* __builtin___vsprintf_chk:              Object Size Checking.
                                                             (line    6)
* __builtin_apply:                       Constructing Calls. (line   31)
* __builtin_apply_args:                  Constructing Calls. (line   20)
* __builtin_bswap32:                     Other Builtins.     (line  473)
* __builtin_bswap64:                     Other Builtins.     (line  478)
* __builtin_choose_expr:                 Other Builtins.     (line  154)
* __builtin_clz:                         Other Builtins.     (line  406)
* __builtin_clzl:                        Other Builtins.     (line  424)
* __builtin_clzll:                       Other Builtins.     (line  444)
* __builtin_constant_p:                  Other Builtins.     (line  194)
* __builtin_ctz:                         Other Builtins.     (line  410)
* __builtin_ctzl:                        Other Builtins.     (line  428)
* __builtin_ctzll:                       Other Builtins.     (line  448)
* __builtin_expect:                      Other Builtins.     (line  240)
* __builtin_ffs:                         Other Builtins.     (line  402)
* __builtin_ffsl:                        Other Builtins.     (line  420)
* __builtin_ffsll:                       Other Builtins.     (line  440)
* __builtin_frame_address:               Return Address.     (line   34)
* __builtin_huge_val:                    Other Builtins.     (line  323)
* __builtin_huge_valf:                   Other Builtins.     (line  328)
* __builtin_huge_vall:                   Other Builtins.     (line  331)
* __builtin_inf:                         Other Builtins.     (line  335)
* __builtin_infd128:                     Other Builtins.     (line  345)
* __builtin_infd32:                      Other Builtins.     (line  339)
* __builtin_infd64:                      Other Builtins.     (line  342)
* __builtin_inff:                        Other Builtins.     (line  349)
* __builtin_infl:                        Other Builtins.     (line  354)
* __builtin_isfinite:                    Other Builtins.     (line    6)
* __builtin_isgreater:                   Other Builtins.     (line    6)
* __builtin_isgreaterequal:              Other Builtins.     (line    6)
* __builtin_isless:                      Other Builtins.     (line    6)
* __builtin_islessequal:                 Other Builtins.     (line    6)
* __builtin_islessgreater:               Other Builtins.     (line    6)
* __builtin_isnormal:                    Other Builtins.     (line    6)
* __builtin_isunordered:                 Other Builtins.     (line    6)
* __builtin_nan:                         Other Builtins.     (line  358)
* __builtin_nand128:                     Other Builtins.     (line  380)
* __builtin_nand32:                      Other Builtins.     (line  374)
* __builtin_nand64:                      Other Builtins.     (line  377)
* __builtin_nanf:                        Other Builtins.     (line  384)
* __builtin_nanl:                        Other Builtins.     (line  387)
* __builtin_nans:                        Other Builtins.     (line  391)
* __builtin_nansf:                       Other Builtins.     (line  395)
* __builtin_nansl:                       Other Builtins.     (line  398)
* __builtin_object_size:                 Object Size Checking.
                                                             (line    6)
* __builtin_offsetof:                    Offsetof.           (line    6)
* __builtin_parity:                      Other Builtins.     (line  417)
* __builtin_parityl:                     Other Builtins.     (line  436)
* __builtin_parityll:                    Other Builtins.     (line  456)
* __builtin_popcount:                    Other Builtins.     (line  414)
* __builtin_popcountl:                   Other Builtins.     (line  432)
* __builtin_popcountll:                  Other Builtins.     (line  452)
* __builtin_powi:                        Other Builtins.     (line    6)
* __builtin_powif:                       Other Builtins.     (line    6)
* __builtin_powil:                       Other Builtins.     (line    6)
* __builtin_prefetch:                    Other Builtins.     (line  284)
* __builtin_return:                      Constructing Calls. (line   48)
* __builtin_return_address:              Return Address.     (line   11)
* __builtin_trap:                        Other Builtins.     (line  264)
* __builtin_types_compatible_p:          Other Builtins.     (line  108)
* __complex__ keyword:                   Complex.            (line    6)
* __declspec(dllexport):                 Function Attributes.
                                                             (line  245)
* __declspec(dllimport):                 Function Attributes.
                                                             (line  275)
* __extension__:                         Alternate Keywords. (line   29)
* __float128 data type:                  Floating Types.     (line    6)
* __float80 data type:                   Floating Types.     (line    6)
* __func__ identifier:                   Function Names.     (line    6)
* __FUNCTION__ identifier:               Function Names.     (line    6)
* __imag__ keyword:                      Complex.            (line   27)
* __PRETTY_FUNCTION__ identifier:        Function Names.     (line    6)
* __real__ keyword:                      Complex.            (line   27)
* __STDC_HOSTED__:                       Standards.          (line   13)
* __sync_add_and_fetch:                  Atomic Builtins.    (line   57)
* __sync_and_and_fetch:                  Atomic Builtins.    (line   57)
* __sync_bool_compare_and_swap:          Atomic Builtins.    (line   65)
* __sync_fetch_and_add:                  Atomic Builtins.    (line   45)
* __sync_fetch_and_and:                  Atomic Builtins.    (line   45)
* __sync_fetch_and_nand:                 Atomic Builtins.    (line   45)
* __sync_fetch_and_or:                   Atomic Builtins.    (line   45)
* __sync_fetch_and_sub:                  Atomic Builtins.    (line   45)
* __sync_fetch_and_xor:                  Atomic Builtins.    (line   45)
* __sync_lock_release:                   Atomic Builtins.    (line   95)
* __sync_lock_test_and_set:              Atomic Builtins.    (line   77)
* __sync_nand_and_fetch:                 Atomic Builtins.    (line   57)
* __sync_or_and_fetch:                   Atomic Builtins.    (line   57)
* __sync_sub_and_fetch:                  Atomic Builtins.    (line   57)
* __sync_synchronize:                    Atomic Builtins.    (line   74)
* __sync_val_compare_and_swap:           Atomic Builtins.    (line   65)
* __sync_xor_and_fetch:                  Atomic Builtins.    (line   57)
* __thread:                              Thread-Local.       (line    6)
* _Accum data type:                      Fixed-Point.        (line    6)
* _Complex keyword:                      Complex.            (line    6)
* _Decimal128 data type:                 Decimal Float.      (line    6)
* _Decimal32 data type:                  Decimal Float.      (line    6)
* _Decimal64 data type:                  Decimal Float.      (line    6)
* _exit:                                 Other Builtins.     (line    6)
* _Exit:                                 Other Builtins.     (line    6)
* _Fract data type:                      Fixed-Point.        (line    6)
* _Sat data type:                        Fixed-Point.        (line    6)
* ABI:                                   Compatibility.      (line    6)
* abort:                                 Other Builtins.     (line    6)
* abs:                                   Other Builtins.     (line    6)
* accessing volatiles:                   Volatiles.          (line    6)
* acos:                                  Other Builtins.     (line    6)
* acosf:                                 Other Builtins.     (line    6)
* acosh:                                 Other Builtins.     (line    6)
* acoshf:                                Other Builtins.     (line    6)
* acoshl:                                Other Builtins.     (line    6)
* acosl:                                 Other Builtins.     (line    6)
* Ada:                                   G++ and GCC.        (line    6)
* additional floating types:             Floating Types.     (line    6)
* address constraints:                   Simple Constraints. (line  142)
* address of a label:                    Labels as Values.   (line    6)
* address_operand:                       Simple Constraints. (line  146)
* alias attribute:                       Function Attributes.
                                                             (line   34)
* aliasing of parameters:                Code Gen Options.   (line  374)
* aligned attribute <1>:                 Type Attributes.    (line   31)
* aligned attribute <2>:                 Variable Attributes.
                                                             (line   23)
* aligned attribute:                     Function Attributes.
                                                             (line   47)
* alignment:                             Alignment.          (line    6)
* alloc_size attribute:                  Function Attributes.
                                                             (line   67)
* alloca:                                Other Builtins.     (line    6)
* alloca vs variable-length arrays:      Variable Length.    (line   27)
* Allow nesting in an interrupt handler on the Blackfin processor.: Function Attributes.
                                                             (line  651)
* alternate keywords:                    Alternate Keywords. (line    6)
* always_inline function attribute:      Function Attributes.
                                                             (line   88)
* AMD x86-64 Options:                    i386 and x86-64 Options.
                                                             (line    6)
* AMD1:                                  Standards.          (line   13)
* ANSI C:                                Standards.          (line   13)
* ANSI C standard:                       Standards.          (line   13)
* ANSI C89:                              Standards.          (line   13)
* ANSI support:                          C Dialect Options.  (line   10)
* ANSI X3.159-1989:                      Standards.          (line   13)
* apostrophes:                           Incompatibilities.  (line  116)
* application binary interface:          Compatibility.      (line    6)
* ARC Options:                           ARC Options.        (line    6)
* ARM [Annotated C++ Reference Manual]:  Backwards Compatibility.
                                                             (line    6)
* ARM options:                           ARM Options.        (line    6)
* arrays of length zero:                 Zero Length.        (line    6)
* arrays of variable length:             Variable Length.    (line    6)
* arrays, non-lvalue:                    Subscripting.       (line    6)
* artificial function attribute:         Function Attributes.
                                                             (line  130)
* asin:                                  Other Builtins.     (line    6)
* asinf:                                 Other Builtins.     (line    6)
* asinh:                                 Other Builtins.     (line    6)
* asinhf:                                Other Builtins.     (line    6)
* asinhl:                                Other Builtins.     (line    6)
* asinl:                                 Other Builtins.     (line    6)
* asm constraints:                       Constraints.        (line    6)
* asm expressions:                       Extended Asm.       (line    6)
* assembler instructions:                Extended Asm.       (line    6)
* assembler names for identifiers:       Asm Labels.         (line    6)
* assembly code, invalid:                Bug Criteria.       (line   12)
* atan:                                  Other Builtins.     (line    6)
* atan2:                                 Other Builtins.     (line    6)
* atan2f:                                Other Builtins.     (line    6)
* atan2l:                                Other Builtins.     (line    6)
* atanf:                                 Other Builtins.     (line    6)
* atanh:                                 Other Builtins.     (line    6)
* atanhf:                                Other Builtins.     (line    6)
* atanhl:                                Other Builtins.     (line    6)
* atanl:                                 Other Builtins.     (line    6)
* attribute of types:                    Type Attributes.    (line    6)
* attribute of variables:                Variable Attributes.
                                                             (line    6)
* attribute syntax:                      Attribute Syntax.   (line    6)
* autoincrement/decrement addressing:    Simple Constraints. (line   28)
* automatic inline for C++ member fns:   Inline.             (line   71)
* AVR Options:                           AVR Options.        (line    6)
* Backwards Compatibility:               Backwards Compatibility.
                                                             (line    6)
* base class members:                    Name lookup.        (line    6)
* bcmp:                                  Other Builtins.     (line    6)
* below100 attribute:                    Variable Attributes.
                                                             (line  480)
* binary compatibility:                  Compatibility.      (line    6)
* Binary constants using the 0b prefix:  Binary constants.   (line    6)
* Blackfin Options:                      Blackfin Options.   (line    6)
* bound pointer to member function:      Bound member functions.
                                                             (line    6)
* bounds checking:                       Optimize Options.   (line  331)
* bug criteria:                          Bug Criteria.       (line    6)
* bugs:                                  Bugs.               (line    6)
* bugs, known:                           Trouble.            (line    6)
* built-in functions <1>:                Other Builtins.     (line    6)
* built-in functions:                    C Dialect Options.  (line  170)
* bzero:                                 Other Builtins.     (line    6)
* C compilation options:                 Invoking GCC.       (line   17)
* C intermediate output, nonexistent:    G++ and GCC.        (line   35)
* C language extensions:                 C Extensions.       (line    6)
* C language, traditional:               C Dialect Options.  (line  250)
* C standard:                            Standards.          (line   13)
* C standards:                           Standards.          (line   13)
* c++:                                   Invoking G++.       (line   14)
* C++:                                   G++ and GCC.        (line   30)
* C++ comments:                          C++ Comments.       (line    6)
* C++ compilation options:               Invoking GCC.       (line   23)
* C++ interface and implementation headers: C++ Interface.   (line    6)
* C++ language extensions:               C++ Extensions.     (line    6)
* C++ member fns, automatically inline:  Inline.             (line   71)
* C++ misunderstandings:                 C++ Misunderstandings.
                                                             (line    6)
* C++ options, command line:             C++ Dialect Options.
                                                             (line    6)
* C++ pragmas, effect on inlining:       C++ Interface.      (line   66)
* C++ source file suffixes:              Invoking G++.       (line    6)
* C++ static data, declaring and defining: Static Definitions.
                                                             (line    6)
* C89:                                   Standards.          (line   13)
* C90:                                   Standards.          (line   13)
* C94:                                   Standards.          (line   13)
* C95:                                   Standards.          (line   13)
* C99:                                   Standards.          (line   13)
* C9X:                                   Standards.          (line   13)
* C_INCLUDE_PATH:                        Environment Variables.
                                                             (line  127)
* cabs:                                  Other Builtins.     (line    6)
* cabsf:                                 Other Builtins.     (line    6)
* cabsl:                                 Other Builtins.     (line    6)
* cacos:                                 Other Builtins.     (line    6)
* cacosf:                                Other Builtins.     (line    6)
* cacosh:                                Other Builtins.     (line    6)
* cacoshf:                               Other Builtins.     (line    6)
* cacoshl:                               Other Builtins.     (line    6)
* cacosl:                                Other Builtins.     (line    6)
* calling functions through the function vector on H8/300, M16C, and M32C processors: Function Attributes.
                                                             (line  461)
* calloc:                                Other Builtins.     (line    6)
* carg:                                  Other Builtins.     (line    6)
* cargf:                                 Other Builtins.     (line    6)
* cargl:                                 Other Builtins.     (line    6)
* case labels in initializers:           Designated Inits.   (line    6)
* case ranges:                           Case Ranges.        (line    6)
* casin:                                 Other Builtins.     (line    6)
* casinf:                                Other Builtins.     (line    6)
* casinh:                                Other Builtins.     (line    6)
* casinhf:                               Other Builtins.     (line    6)
* casinhl:                               Other Builtins.     (line    6)
* casinl:                                Other Builtins.     (line    6)
* cast to a union:                       Cast to Union.      (line    6)
* catan:                                 Other Builtins.     (line    6)
* catanf:                                Other Builtins.     (line    6)
* catanh:                                Other Builtins.     (line    6)
* catanhf:                               Other Builtins.     (line    6)
* catanhl:                               Other Builtins.     (line    6)
* catanl:                                Other Builtins.     (line    6)
* cbrt:                                  Other Builtins.     (line    6)
* cbrtf:                                 Other Builtins.     (line    6)
* cbrtl:                                 Other Builtins.     (line    6)
* ccos:                                  Other Builtins.     (line    6)
* ccosf:                                 Other Builtins.     (line    6)
* ccosh:                                 Other Builtins.     (line    6)
* ccoshf:                                Other Builtins.     (line    6)
* ccoshl:                                Other Builtins.     (line    6)
* ccosl:                                 Other Builtins.     (line    6)
* ceil:                                  Other Builtins.     (line    6)
* ceilf:                                 Other Builtins.     (line    6)
* ceill:                                 Other Builtins.     (line    6)
* cexp:                                  Other Builtins.     (line    6)
* cexpf:                                 Other Builtins.     (line    6)
* cexpl:                                 Other Builtins.     (line    6)
* character set, execution:              Preprocessor Options.
                                                             (line  498)
* character set, input:                  Preprocessor Options.
                                                             (line  511)
* character set, input normalization:    Warning Options.    (line 1053)
* character set, wide execution:         Preprocessor Options.
                                                             (line  503)
* cimag:                                 Other Builtins.     (line    6)
* cimagf:                                Other Builtins.     (line    6)
* cimagl:                                Other Builtins.     (line    6)
* cleanup attribute:                     Variable Attributes.
                                                             (line   83)
* clog:                                  Other Builtins.     (line    6)
* clogf:                                 Other Builtins.     (line    6)
* clogl:                                 Other Builtins.     (line    6)
* COBOL:                                 G++ and GCC.        (line   23)
* code generation conventions:           Code Gen Options.   (line    6)
* code, mixed with declarations:         Mixed Declarations. (line    6)
* cold function attribute:               Function Attributes.
                                                             (line  785)
* command options:                       Invoking GCC.       (line    6)
* comments, C++ style:                   C++ Comments.       (line    6)
* common attribute:                      Variable Attributes.
                                                             (line   99)
* comparison of signed and unsigned values, warning: Warning Options.
                                                             (line  922)
* compiler bugs, reporting:              Bug Reporting.      (line    6)
* compiler compared to C++ preprocessor: G++ and GCC.        (line   35)
* compiler options, C++:                 C++ Dialect Options.
                                                             (line    6)
* compiler options, Objective-C and Objective-C++: Objective-C and Objective-C++ Dialect Options.
                                                             (line    6)
* compiler version, specifying:          Target Options.     (line    6)
* COMPILER_PATH:                         Environment Variables.
                                                             (line   88)
* complex conjugation:                   Complex.            (line   34)
* complex numbers:                       Complex.            (line    6)
* compound literals:                     Compound Literals.  (line    6)
* computed gotos:                        Labels as Values.   (line    6)
* conditional expressions, extensions:   Conditionals.       (line    6)
* conflicting types:                     Disappointments.    (line   21)
* conj:                                  Other Builtins.     (line    6)
* conjf:                                 Other Builtins.     (line    6)
* conjl:                                 Other Builtins.     (line    6)
* const applied to function:             Function Attributes.
                                                             (line    6)
* const function attribute:              Function Attributes.
                                                             (line  177)
* constants in constraints:              Simple Constraints. (line   58)
* constraint modifier characters:        Modifiers.          (line    6)
* constraint, matching:                  Simple Constraints. (line  127)
* constraints, asm:                      Constraints.        (line    6)
* constraints, machine specific:         Machine Constraints.
                                                             (line    6)
* constructing calls:                    Constructing Calls. (line    6)
* constructor expressions:               Compound Literals.  (line    6)
* constructor function attribute:        Function Attributes.
                                                             (line  205)
* contributors:                          Contributors.       (line    6)
* copysign:                              Other Builtins.     (line    6)
* copysignf:                             Other Builtins.     (line    6)
* copysignl:                             Other Builtins.     (line    6)
* core dump:                             Bug Criteria.       (line    9)
* cos:                                   Other Builtins.     (line    6)
* cosf:                                  Other Builtins.     (line    6)
* cosh:                                  Other Builtins.     (line    6)
* coshf:                                 Other Builtins.     (line    6)
* coshl:                                 Other Builtins.     (line    6)
* cosl:                                  Other Builtins.     (line    6)
* CPATH:                                 Environment Variables.
                                                             (line  126)
* CPLUS_INCLUDE_PATH:                    Environment Variables.
                                                             (line  128)
* cpow:                                  Other Builtins.     (line    6)
* cpowf:                                 Other Builtins.     (line    6)
* cpowl:                                 Other Builtins.     (line    6)
* cproj:                                 Other Builtins.     (line    6)
* cprojf:                                Other Builtins.     (line    6)
* cprojl:                                Other Builtins.     (line    6)
* creal:                                 Other Builtins.     (line    6)
* crealf:                                Other Builtins.     (line    6)
* creall:                                Other Builtins.     (line    6)
* CRIS Options:                          CRIS Options.       (line    6)
* cross compiling:                       Target Options.     (line    6)
* CRX Options:                           CRX Options.        (line    6)
* csin:                                  Other Builtins.     (line    6)
* csinf:                                 Other Builtins.     (line    6)
* csinh:                                 Other Builtins.     (line    6)
* csinhf:                                Other Builtins.     (line    6)
* csinhl:                                Other Builtins.     (line    6)
* csinl:                                 Other Builtins.     (line    6)
* csqrt:                                 Other Builtins.     (line    6)
* csqrtf:                                Other Builtins.     (line    6)
* csqrtl:                                Other Builtins.     (line    6)
* ctan:                                  Other Builtins.     (line    6)
* ctanf:                                 Other Builtins.     (line    6)
* ctanh:                                 Other Builtins.     (line    6)
* ctanhf:                                Other Builtins.     (line    6)
* ctanhl:                                Other Builtins.     (line    6)
* ctanl:                                 Other Builtins.     (line    6)
* Darwin options:                        Darwin Options.     (line    6)
* dcgettext:                             Other Builtins.     (line    6)
* DD integer suffix:                     Decimal Float.      (line    6)
* dd integer suffix:                     Decimal Float.      (line    6)
* deallocating variable length arrays:   Variable Length.    (line   23)
* debugging information options:         Debugging Options.  (line    6)
* decimal floating types:                Decimal Float.      (line    6)
* declaration scope:                     Incompatibilities.  (line   80)
* declarations inside expressions:       Statement Exprs.    (line    6)
* declarations, mixed with code:         Mixed Declarations. (line    6)
* declaring attributes of functions:     Function Attributes.
                                                             (line    6)
* declaring static data in C++:          Static Definitions. (line    6)
* defining static data in C++:           Static Definitions. (line    6)
* dependencies for make as output:       Environment Variables.
                                                             (line  154)
* dependencies, make:                    Preprocessor Options.
                                                             (line  175)
* DEPENDENCIES_OUTPUT:                   Environment Variables.
                                                             (line  153)
* dependent name lookup:                 Name lookup.        (line    6)
* deprecated attribute:                  Variable Attributes.
                                                             (line  107)
* deprecated attribute.:                 Function Attributes.
                                                             (line  227)
* designated initializers:               Designated Inits.   (line    6)
* designator lists:                      Designated Inits.   (line   94)
* designators:                           Designated Inits.   (line   61)
* destructor function attribute:         Function Attributes.
                                                             (line  205)
* DF integer suffix:                     Decimal Float.      (line    6)
* df integer suffix:                     Decimal Float.      (line    6)
* dgettext:                              Other Builtins.     (line    6)
* diagnostic messages:                   Language Independent Options.
                                                             (line    6)
* dialect options:                       C Dialect Options.  (line    6)
* digits in constraint:                  Simple Constraints. (line  115)
* directory options:                     Directory Options.  (line    6)
* DL integer suffix:                     Decimal Float.      (line    6)
* dl integer suffix:                     Decimal Float.      (line    6)
* dollar signs in identifier names:      Dollar Signs.       (line    6)
* double-word arithmetic:                Long Long.          (line    6)
* downward funargs:                      Nested Functions.   (line    6)
* drem:                                  Other Builtins.     (line    6)
* dremf:                                 Other Builtins.     (line    6)
* dreml:                                 Other Builtins.     (line    6)
* E in constraint:                       Simple Constraints. (line   77)
* earlyclobber operand:                  Modifiers.          (line   25)
* eight bit data on the H8/300, H8/300H, and H8S: Function Attributes.
                                                             (line  328)
* empty structures:                      Empty Structures.   (line    6)
* environment variables:                 Environment Variables.
                                                             (line    6)
* erf:                                   Other Builtins.     (line    6)
* erfc:                                  Other Builtins.     (line    6)
* erfcf:                                 Other Builtins.     (line    6)
* erfcl:                                 Other Builtins.     (line    6)
* erff:                                  Other Builtins.     (line    6)
* erfl:                                  Other Builtins.     (line    6)
* error function attribute:              Function Attributes.
                                                             (line  146)
* error messages:                        Warnings and Errors.
                                                             (line    6)
* escaped newlines:                      Escaped Newlines.   (line    6)
* exception handler functions on the Blackfin processor: Function Attributes.
                                                             (line  338)
* exclamation point:                     Multi-Alternative.  (line   33)
* exit:                                  Other Builtins.     (line    6)
* exp:                                   Other Builtins.     (line    6)
* exp10:                                 Other Builtins.     (line    6)
* exp10f:                                Other Builtins.     (line    6)
* exp10l:                                Other Builtins.     (line    6)
* exp2:                                  Other Builtins.     (line    6)
* exp2f:                                 Other Builtins.     (line    6)
* exp2l:                                 Other Builtins.     (line    6)
* expf:                                  Other Builtins.     (line    6)
* expl:                                  Other Builtins.     (line    6)
* explicit register variables:           Explicit Reg Vars.  (line    6)
* expm1:                                 Other Builtins.     (line    6)
* expm1f:                                Other Builtins.     (line    6)
* expm1l:                                Other Builtins.     (line    6)
* expressions containing statements:     Statement Exprs.    (line    6)
* expressions, constructor:              Compound Literals.  (line    6)
* extended asm:                          Extended Asm.       (line    6)
* extensible constraints:                Simple Constraints. (line  151)
* extensions, ?::                        Conditionals.       (line    6)
* extensions, C language:                C Extensions.       (line    6)
* extensions, C++ language:              C++ Extensions.     (line    6)
* external declaration scope:            Incompatibilities.  (line   80)
* externally_visible attribute.:         Function Attributes.
                                                             (line 1108)
* F in constraint:                       Simple Constraints. (line   82)
* fabs:                                  Other Builtins.     (line    6)
* fabsf:                                 Other Builtins.     (line    6)
* fabsl:                                 Other Builtins.     (line    6)
* fatal signal:                          Bug Criteria.       (line    9)
* fdim:                                  Other Builtins.     (line    6)
* fdimf:                                 Other Builtins.     (line    6)
* fdiml:                                 Other Builtins.     (line    6)
* FDL, GNU Free Documentation License:   GNU Free Documentation License.
                                                             (line    6)
* ffs:                                   Other Builtins.     (line    6)
* file name suffix:                      Overall Options.    (line   14)
* file names:                            Link Options.       (line   10)
* fixed-point types:                     Fixed-Point.        (line    6)
* flatten function attribute:            Function Attributes.
                                                             (line  137)
* flexible array members:                Zero Length.        (line    6)
* float as function value type:          Incompatibilities.  (line  141)
* floating point precision <1>:          Disappointments.    (line   68)
* floating point precision:              Optimize Options.   (line 1174)
* floor:                                 Other Builtins.     (line    6)
* floorf:                                Other Builtins.     (line    6)
* floorl:                                Other Builtins.     (line    6)
* fma:                                   Other Builtins.     (line    6)
* fmaf:                                  Other Builtins.     (line    6)
* fmal:                                  Other Builtins.     (line    6)
* fmax:                                  Other Builtins.     (line    6)
* fmaxf:                                 Other Builtins.     (line    6)
* fmaxl:                                 Other Builtins.     (line    6)
* fmin:                                  Other Builtins.     (line    6)
* fminf:                                 Other Builtins.     (line    6)
* fminl:                                 Other Builtins.     (line    6)
* fmod:                                  Other Builtins.     (line    6)
* fmodf:                                 Other Builtins.     (line    6)
* fmodl:                                 Other Builtins.     (line    6)
* force_align_arg_pointer attribute:     Function Attributes.
                                                             (line  827)
* format function attribute:             Function Attributes.
                                                             (line  369)
* format_arg function attribute:         Function Attributes.
                                                             (line  422)
* Fortran:                               G++ and GCC.        (line    6)
* forwarding calls:                      Constructing Calls. (line    6)
* fprintf:                               Other Builtins.     (line    6)
* fprintf_unlocked:                      Other Builtins.     (line    6)
* fputs:                                 Other Builtins.     (line    6)
* fputs_unlocked:                        Other Builtins.     (line    6)
* freestanding environment:              Standards.          (line   13)
* freestanding implementation:           Standards.          (line   13)
* frexp:                                 Other Builtins.     (line    6)
* frexpf:                                Other Builtins.     (line    6)
* frexpl:                                Other Builtins.     (line    6)
* FRV Options:                           FRV Options.        (line    6)
* fscanf:                                Other Builtins.     (line    6)
* fscanf, and constant strings:          Incompatibilities.  (line   17)
* function addressability on the M32R/D: Function Attributes.
                                                             (line  611)
* function attributes:                   Function Attributes.
                                                             (line    6)
* function pointers, arithmetic:         Pointer Arith.      (line    6)
* function prototype declarations:       Function Prototypes.
                                                             (line    6)
* function without a prologue/epilogue code: Function Attributes.
                                                             (line  639)
* function, size of pointer to:          Pointer Arith.      (line    6)
* functions called via pointer on the RS/6000 and PowerPC: Function Attributes.
                                                             (line  565)
* functions in arbitrary sections:       Function Attributes.
                                                             (line    6)
* functions that are passed arguments in registers on the 386: Function Attributes.
                                                             (line    6)
* functions that behave like malloc:     Function Attributes.
      